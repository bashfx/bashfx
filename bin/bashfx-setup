#!/usr/bin/env bash
##------------------------------------------------------------------------------
##==============================================================================


  x=$'\e[0m';
  green=$'\e[1;32m';
  red2=$'\e[1;31m';
  purple='\033[38;5;213m';

#--------------------------------------------------------------

  [ "$0" != "-bash" ] && BIN_DIR="$( cd "$(dirname "$0")" || exit; pwd -P)" \
                      || BIN_DIR="$( cd "$(dirname "${BASH_SOURCE[0]}")" || exit; pwd -P)" 


  THIS_DIR="$( cd $BIN_DIR && cd ..  || exit; pwd -P)"
  ROOT_DIR="$( cd $THIS_DIR && cd .. || exit; pwd -P)"


#--------------------------------------------------------------
# Load this/bin into PATH
#--------------------------------------------------------------

  if [ "$0" = "-bash" ]; then
  	if [[ "${@}" =~ "clean" ]]; then
  		{ printf -v PATH '%s\n' "${PATH//:${BIN_DIR}/}"; printf "${red2}BashFX nuked from path!${x}\n"; }
  	else
  		if [[ ! "$PATH" =~ "$BIN_DIR" ]]; then
  			{ export PATH="$PATH:${BIN_DIR}:"; printf "${green}Added ./bin to path! Run > bashfx install${x}\n"; }
  		# else
  		# 	printf "${purple}So ./bin already in path! Run > bashfx-install or bashfx-uninstall${x}\n"
  		fi
  	fi
  else
  	:
  fi


#--------------------------------------------------------------
# Run Install
#--------------------------------------------------------------
  
  if [ "$0" = "-bash" ]; then
    if [[ "${@}" =~ "uninst" ]]; then

      res=$($BIN_DIR/bashfx-uninstall "${@}")

      #printf "Removing BASHFX variables from session"
      source $BIN_DIR/bashfx-vars --unset

    elif [[ "${@}" =~ "inst" ]]; then

      res=$($BIN_DIR/bashfx-install "${@}")

      #printf "Loading BASHFX variables into session (bashrc)"
      source $HOME/.bashrc
    elif [[ "${@}" =~ "stat" ]]; then
      :
    fi
  fi

  # [ "$0" != "-bash" ] && error "BASHFX setup must be sourced."
  

  unset THIS_DIR BIN_DIR ROOT_DIR res x red2 green purple



